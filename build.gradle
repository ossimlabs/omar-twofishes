buildscript {
  ext {
    baseImage = "omar-base"
  }
  ext {
    dockerFile=project.file("docker/Dockerfile")
    // must be a closure.  If set to =false then it thinks the proeprty does not exist
    hasJar={false}
    dockerStatementsOverride = { [
      "FROM ${project.dockerNamespaceUrl}${project.ext.baseImage}:${project.dockerAppTag}",
	  "USER root",
      "ADD ./yum.repos.d/* /etc/yum.repos.d/",
      "ADD server-assembly-0.84.9.jar /home/omar/",
      "ADD 2015-03-05.zip /home/omar/",
      "ADD run.sh /home/omar/",
      """RUN yum -y install java-1.8.0-openjdk-devel && \\
    yum -y install nss_wrapper gettext wget && yum -y install unzip && \\
    cd /home/omar && \\
    unzip 2015-03-05.zip && rm 2015-03-05.zip && \
    chown 1001:0 -R /home/omar && chmod 777 `find /home/omar -type d` && \
    chmod 666 `find /home/omar -type f` && chmod 777 /home/omar/run.sh
    """,
      "ENV LANG en_US.UTF-8",
      "ENV LANGUAGE en_US:en",
      "ENV LC_ALL en_US.UTF-8",
      "USER 1001",
      "WORKDIR /home/omar",
      "CMD /home/omar/run.sh",
      "EXPOSE 8080 8081 8082 8083"
    ] }
    if ( System.env.OMAR_COMMON_PROPERTIES )
    {
        apply from: System.env.OMAR_COMMON_PROPERTIES
    }
  }
  repositories {
      maven { url "${ossimMavenProxy}" }
      /*
      if( !System.env.WWW_CONNECTED || Boolean.parseBoolean( System.env.WWW_CONNECTED ) ) {
        jcenter()
        mavenLocal()
      }
      */
    }
    dependencies {
          classpath "com.bmuschko:gradle-docker-plugin:${gradleDockerPluginV}"
          classpath 'com.github.skhatri:gradle-s3-plugin:1.0.4'
          classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.7.5"
    }
}

plugins {
    id "com.github.ben-manes.versions" version "0.17.0"
    id "org.sonarqube" version "2.6.2"
}

apply plugin: "maven-publish"
apply plugin: "maven"
